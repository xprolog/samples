config('P01 (*) Find the last element of a list',
    'https://github.com/xprolog/samples/blob/master/p01.pl',
    [goal(last(X,[a,b,c,d])), category(tutorial)]).

config('P02 (*) Find the last but one element of a list',
    'https://github.com/xprolog/samples/blob/master/p02.pl',
    [goal(last_but_one(X,[a,b,c,d])), category(tutorial)]).
    
config('P03 (*) Find the K''th element of a list',
    'https://github.com/xprolog/samples/blob/master/p03.pl',
    [goal(element_at(X,[a,b,c,d,e],3)), category(tutorial)]).
    
config('P04 (*) Find the number of elements of a list',
    'https://github.com/xprolog/samples/blob/master/p04.pl',
    [goal(length([a,b,c,d,e],N)), category(tutorial)]).

config('P05 (*) Reverse a list',
    'https://github.com/xprolog/samples/blob/master/p05.pl',
    [goal(reverse([1,2,3,4],L)), category(tutorial)]).

config('P06 (*) Find out whether a list is a palindrome',
    'https://github.com/xprolog/samples/blob/master/p06.pl',
    [goal(palindrome([x,a,m,a,x])), category(tutorial)]).

config('P07 (**) Flatten a nested list structure',
    'https://github.com/xprolog/samples/blob/master/p07.pl',
    [goal(flatten([a,[b,[c,d],e]],X)), category(tutorial)]).

config('P08 (**) Eliminate consecutive duplicates of list elements',
    'https://github.com/xprolog/samples/blob/master/p08.pl',
    [goal(compress([a,a,a,a,b,c,c,a,a,d,e,e,e,e],X)), category(tutorial)]).
